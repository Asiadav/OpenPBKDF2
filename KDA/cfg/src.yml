# src.yml - hammer source file config

# List of all Verilog source files to include in this build.
synthesis.inputs.input_files: [
  "../common/v/bsg_guts.vh", # Some definitions
  
  # Basejump STL sources
  "${bsg_root}/bsg_misc/bsg_defines.v",
  "${bsg_root}/bsg_fsb/bsg_fsb_pkg.v",
  "${bsg_root}/bsg_noc/bsg_noc_links.vh",
  "${bsg_root}/bsg_noc/bsg_noc_pkg.v",
  "${bsg_root}/bsg_noc/bsg_mesh_router_pkg.v",
  "${bsg_root}/bsg_misc/bsg_counter_overflow_set_en.v",
  "${bsg_root}/bsg_misc/bsg_concentrate_static.v",
  "${bsg_root}/bsg_misc/bsg_unconcentrate_static.v",
  "${bsg_root}/bsg_misc/bsg_counter_set_down.v",
  "${bsg_root}/bsg_misc/bsg_array_concentrate_static.v",
  "${bsg_root}/bsg_noc/bsg_wormhole_router_pkg.v",
  "${bsg_root}/bsg_noc/bsg_wormhole_router.v",
  "${bsg_root}/bsg_noc/bsg_ready_and_link_async_to_wormhole.v",
  "${bsg_root}/bsg_noc/bsg_wormhole_router_decoder_dor.v",
  "${bsg_root}/bsg_noc/bsg_wormhole_router_input_control.v",
  "${bsg_root}/bsg_noc/bsg_wormhole_router_output_control.v",
  "${bsg_root}/bsg_async/bsg_async_credit_counter.v",
  "${bsg_root}/bsg_async/bsg_async_fifo.v",
  "${bsg_root}/bsg_async/bsg_async_ptr_gray.v",
  "${bsg_root}/bsg_async/bsg_launch_sync_sync.v",
  "${bsg_root}/bsg_async/bsg_sync_sync.v",
  "${bsg_root}/bsg_dataflow/bsg_1_to_n_tagged.v",
  "${bsg_root}/bsg_dataflow/bsg_1_to_n_tagged_fifo.v",
  "${bsg_root}/bsg_dataflow/bsg_channel_narrow.v",
  "${bsg_root}/bsg_dataflow/bsg_channel_tunnel.v",
  "${bsg_root}/bsg_dataflow/bsg_channel_tunnel_in.v",
  "${bsg_root}/bsg_dataflow/bsg_channel_tunnel_out.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_1r1w_narrowed.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_1r1w_pseudo_large.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_1r1w_small.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_1r1w_small_hardened.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_1rw_large.v",
  "${bsg_root}/bsg_dataflow/bsg_fifo_tracker.v",
  "${bsg_root}/bsg_dataflow/bsg_flatten_2D_array.v",
  "${bsg_root}/bsg_dataflow/bsg_make_2D_array.v",
  "${bsg_root}/bsg_dataflow/bsg_one_fifo.v",
  "${bsg_root}/bsg_dataflow/bsg_parallel_in_serial_out.v",
  "${bsg_root}/bsg_dataflow/bsg_serial_in_parallel_out.v",
  "${bsg_root}/bsg_dataflow/bsg_round_robin_1_to_n.v",
  "${bsg_root}/bsg_dataflow/bsg_round_robin_fifo_to_fifo.v",
  "${bsg_root}/bsg_dataflow/bsg_round_robin_n_to_1.v",
  "${bsg_root}/bsg_dataflow/bsg_sbox.v",
  "${bsg_root}/bsg_dataflow/bsg_scatter_gather.v",
  "${bsg_root}/bsg_dataflow/bsg_serial_in_parallel_out_full.v",
  "${bsg_root}/bsg_dataflow/bsg_two_fifo.v",
  "${bsg_root}/bsg_fsb/bsg_front_side_bus_hop_in.v",
  "${bsg_root}/bsg_fsb/bsg_front_side_bus_hop_out.v",
  "${bsg_root}/bsg_fsb/bsg_fsb.v",
  "${bsg_root}/bsg_fsb/bsg_fsb_murn_gateway.v",
  "${bsg_root}/bsg_link/bsg_link_ddr_downstream.v",
  "${bsg_root}/bsg_link/bsg_link_ddr_upstream.v",
  "${bsg_root}/bsg_link/bsg_link_iddr_phy.v",
  "${bsg_root}/bsg_link/bsg_link_oddr_phy.v",
  "${bsg_root}/bsg_link/bsg_link_source_sync_downstream.v",
  "${bsg_root}/bsg_link/bsg_link_source_sync_upstream.v",
  "${bsg_root}/bsg_mem/bsg_mem_1r1w.v",
  "${bsg_root}/bsg_mem/bsg_mem_1r1w_synth.v",
  "${bsg_root}/bsg_mem/bsg_mem_1rw_sync.v",
  "${bsg_root}/bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v",
  "${bsg_root}/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v",
  "${bsg_root}/bsg_mem/bsg_mem_1rw_sync_synth.v",
  "${bsg_root}/bsg_mem/bsg_mem_2r1w_sync.v",
  "${bsg_root}/bsg_mem/bsg_mem_2r1w_sync_synth.v",
  "${bsg_root}/bsg_mem/bsg_mem_banked_crossbar.v",
  "${bsg_root}/bsg_misc/bsg_adder_cin.v",
  "${bsg_root}/bsg_misc/bsg_and.v",
  "${bsg_root}/bsg_misc/bsg_arb_fixed.v",
  "${bsg_root}/bsg_misc/bsg_array_reverse.v",
  "${bsg_root}/bsg_misc/bsg_binary_plus_one_to_gray.v",
  "${bsg_root}/bsg_misc/bsg_buf.v",
  "${bsg_root}/bsg_misc/bsg_buf_ctrl.v",
  "${bsg_root}/bsg_misc/bsg_circular_ptr.v",
  "${bsg_root}/bsg_misc/bsg_clkbuf.v",
  "${bsg_root}/bsg_misc/bsg_counter_clear_up.v",
  "${bsg_root}/bsg_misc/bsg_counter_up_down.v",
  "${bsg_root}/bsg_misc/bsg_counter_up_down_variable.v",
  "${bsg_root}/bsg_misc/bsg_crossbar_o_by_i.v",
  "${bsg_root}/bsg_misc/bsg_cycle_counter.v",
  "${bsg_root}/bsg_misc/bsg_decode.v",
  "${bsg_root}/bsg_misc/bsg_decode_with_v.v",
  "${bsg_root}/bsg_misc/bsg_dff.v",
  "${bsg_root}/bsg_misc/bsg_dff_en.v",
  "${bsg_root}/bsg_misc/bsg_dff_reset.v",
  "${bsg_root}/bsg_misc/bsg_dff_reset_en.v",
  "${bsg_root}/bsg_misc/bsg_encode_one_hot.v",
  "${bsg_root}/bsg_misc/bsg_gray_to_binary.v",
  "${bsg_root}/bsg_misc/bsg_idiv_iterative.v",
  "${bsg_root}/bsg_misc/bsg_idiv_iterative_controller.v",
  "${bsg_root}/bsg_misc/bsg_imul_iterative.v",
  "${bsg_root}/bsg_misc/bsg_mux.v",
  "${bsg_root}/bsg_misc/bsg_mux_one_hot.v",
  "${bsg_root}/bsg_misc/bsg_nor2.v",
  "${bsg_root}/bsg_misc/bsg_popcount.v",
  "${bsg_root}/bsg_misc/bsg_priority_encode.v",
  "${bsg_root}/bsg_misc/bsg_priority_encode_one_hot_out.v",
  "${bsg_root}/bsg_misc/bsg_rotate_right.v",
  "${bsg_root}/bsg_misc/bsg_round_robin_arb.v",
  "${bsg_root}/bsg_misc/bsg_scan.v",
  "${bsg_root}/bsg_misc/bsg_thermometer_count.v",
  "${bsg_root}/bsg_misc/bsg_tiehi.v",
  "${bsg_root}/bsg_misc/bsg_tielo.v",
  "${bsg_root}/bsg_misc/bsg_transpose.v",
  "${bsg_root}/bsg_misc/bsg_xnor.v",
  "${bsg_root}/bsg_noc/bsg_mesh_router.v",
  "${bsg_root}/bsg_noc/bsg_mesh_router_buffered.v",
  "${bsg_root}/bsg_noc/bsg_mesh_stitch.v",

  # bsg_guts and IO sources
  "../common/v/bsg_guts.v",
  "../common/v/packaging/bsg_iopad_macros.v",
  "../common/v/packaging/bsg_iopad_mapping.v",
  "../common/v/packaging/bsg_iopads.v",
  "../common/v/packaging/bsg_pinout.v",

  # Top level sources
  "v/bsg_chip.v",
  "v/bsg_test_node_client.v",
  "v/bsg_cgol.v",
  "v/bsg_cgol_ctrl.v",
  "v/bsg_cgol_input_data_channel.v",
  "v/bsg_cgol_output_data_channel.v",
  "v/bsg_cgol_cell_array.v",
  "../bsg_cgol_cell/v/bsg_cgol_cell.v",
]
synthesis.inputs.input_files_meta: [append, subst]

# Add synthesis input files to simulation inputs (Only for RTL sim)
sim.inputs.input_files: synthesis.inputs.input_files
sim.inputs.input_files_meta: [crossref, subst]

